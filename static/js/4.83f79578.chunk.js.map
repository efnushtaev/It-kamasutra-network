{"version":3,"sources":["View/Components/MainContent/Dialogs/dialogs.module.scss","View/Styles/Elements/Forms/textarea.module.scss","View/hoc/AuthRedirect.js","View/Components/MainContent/Dialogs/DialogItem/DialogItem.jsx","View/Components/MainContent/Dialogs/Message/Message.jsx","View/Components/MainContent/Dialogs/Dialogs.jsx","View/Components/MainContent/Dialogs/DialogsContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","AuthRedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialog","activeNameClass","active","name","Message","come","messageIn","messageOut","message","maxLength100","maxLengthCreator","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogElements","dialogsData","map","d","messageElements","messagesData","m","dialogs","dialogItems","messages","elFormsTextarea","container","values","postNewMessage","newDialogMessage","compose","dialogPage","newMessageText"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,UAAY,2BAA2B,WAAa,8B,oBCArLD,EAAOC,QAAU,CAAC,UAAY,8B,uICG1BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAOD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACPC,IAAML,WAQ1C,OAFwCM,YAAQX,EAARW,CAAoCL,K,8FCFjEM,EATI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,OAAQC,gBAAiBF,IAAQG,QACrD,kBAAC,IAAD,CAASV,GAAII,GAAOL,EAAMY,QCGvBC,EARC,SAACb,GACb,OACI,yBAAKO,UAA0B,OAAfP,EAAMc,KACpBL,IAAOM,UACPN,IAAOO,YAAahB,EAAMiB,U,2DCG9BC,EAAeC,YAAiB,KAahCC,EAAkBC,YAAU,CAAEC,KAAM,iBAAlBD,EAZJ,SAACrB,GACjB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,kBAACC,EAAA,EAAD,CAAQC,UAAWC,IACXf,KAAK,mBACLgB,YAAY,iBACZC,SAAU,CAACC,IAAUZ,KAC7B,mDAuCGa,EAjCC,SAAC/B,GACb,IAAKA,EAAMN,OAAQ,OAAO,kBAAC,IAAD,CAAUO,GAAI,WAExC,IAII+B,EACAhC,EAAMiC,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMN,GAAI6B,EAAE7B,QAE3D8B,EACApC,EAAMqC,aAAaH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASrB,QAASqB,EAAErB,QAASH,KAAMwB,EAAExB,UAGrE,OACI,6BACI,yBAAKP,UAAWC,IAAQ+B,SACpB,yBAAKhC,UAAWC,IAAQgC,aACnBR,GAEL,yBAAKzB,UAAWC,IAAQiC,UACnBL,IAGT,yBAAK7B,UAAWmC,IAAgBC,WAC5B,kBAACvB,EAAD,CAAiBG,SAtBH,SAACqB,GACvB5C,EAAM6C,eAAeD,EAAOE,wB,wBCTrBC,sBACX5C,aAVkB,SAACV,GACnB,MAAO,CACHwC,YAAaxC,EAAMuD,WAAWf,YAC9BI,aAAc5C,EAAMuD,WAAWX,aAC/BY,eAAgBxD,EAAMuD,WAAWC,eACjCvD,OAAQD,EAAME,KAAKD,UAKE,CACrBmD,qBAEJjD,IAJWmD,CAKbhB","file":"static/js/4.83f79578.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__oaUpQ\",\"dialogItems\":\"dialogs_dialogItems__2q0OS\",\"active\":\"dialogs_active__24lmT\",\"messageIn\":\"dialogs_messageIn__S-49t\",\"messageOut\":\"dialogs_messageOut__1lPIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"textarea_container__2u4J2\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class AuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedProfileContainerRedirect = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n    \r\n    return ConnectedProfileContainerRedirect\r\n} ","import React from 'react';\r\nimport classes from './../dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={classes.dialog} activeNameClass={classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport dialog from './../dialogs.module.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={props.come === \"in\" \r\n        ? dialog.messageIn \r\n        : dialog.messageOut}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport classes from './dialogs.module.scss';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport elFormsTextarea from './../../../Styles/Elements/Forms/textarea.module.scss'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Textarea } from '../../Common/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../../utils/validations';\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field  component={Textarea}\r\n                    name=\"newDialogMessage\"\r\n                    placeholder=\"NEW MESSAGE...\"\r\n                    validate={[required, maxLength100]} />\r\n            <button>Add message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({ form: 'dialogMessage' })(DialogsForm)\r\nconst Dialogs = (props) => {\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    let addNewDialogMessage = (values) => {\r\n        props.postNewMessage(values.newDialogMessage)\r\n    }\r\n\r\n    let dialogElements =\r\n        props.dialogsData.map(d => <DialogItem name={d.name} id={d.id} />)\r\n\r\n    let messageElements =\r\n        props.messagesData.map(m => <Message message={m.message} come={m.come} />)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.dialogs}>\r\n                <div className={classes.dialogItems}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n            <div className={elFormsTextarea.container}>\r\n                <DialogReduxForm onSubmit={addNewDialogMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import {\r\n    postNewMessage\r\n} from '../../../../redux/reducer/dialogPage-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {\r\n    connect\r\n} from 'react-redux';\r\nimport { WithAuthRedirect } from '../../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogPage.dialogsData,\r\n        messagesData: state.dialogPage.messagesData,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        postNewMessage\r\n    }),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}